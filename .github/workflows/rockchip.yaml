name: Build rockchip 6.12

on: [push]

jobs:
  build:
    name: Build rockchip linux 6.12 images
    runs-on: ubuntu-latest

    steps:
      - name: Setup Ubuntu
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            libncurses5-dev \
            gawk \
            git \
            subversion \
            libssl-dev \
            gettext \
            unzip \
            zlib1g-dev \
            file \
            swig \
            python3 \
            python3-pip \
            python3-ply \
            python3-distutils \
            python3-pyelftools \
            libpython3-dev

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          overprovision-lvm: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

          git clone https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon
          git clone https://github.com/qianlyun123/luci-app-modem.git package/luci-app-modem

          cd feeds/luci
          wget https://gist.githubusercontent.com/mj22226/363cefecd314e45b49d8eafff8473fcf/raw/f327d1fcae5513be3abbeea1c6696c1da845a635/01-diskman.patch
          git apply 01-diskman.patch
          cd -

          cd feeds/packages
          wget https://gist.githubusercontent.com/mj22226/351f11e66f08f06e37a985719a31ddb4/raw/b35ba7a3aac1949bd6bbeaad065a0a93dc3c34f0/01-cpu.patch
          wget https://gist.githubusercontent.com/mj22226/b66f5c1bd5fc7e1cb3cf2c690b5dbd5a/raw/b955e726cbb0948d932c8d6143229ad604320149/20-lxc.patch
          git apply 01-cpu.patch
          git apply 20-lxc.patch
          cd -

          sed -i "71s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
          sed -i "84s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
          sed -i "195s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
          sed -i "212s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
          sed -i "13s/'1'/'0'/" feeds/packages/utils/dockerd/files/etc/config/dockerd

          ./scripts/feeds update -a
          ./scripts/feeds install -a -f
          cp .github/workflows/rk-config .config

          # 禁用 uboot-rockchip
          sed -i '/CONFIG_PACKAGE_uboot-rockchip=y/d' .config
          make defconfig

          wget https://gist.githubusercontent.com/mj22226/9a69bb754a83e8a5cf03fcc60d62d473/raw/cc6f36831d6098de4a7fccf04a312d36a0dbc999/01-key.patch
          git apply 01-key.patch
          make download -j32
          rm 01-key.patch

          # 编译并获取详细日志
          make -j1 V=s

          # 清理无用文件
          rm -rf bin/targets/rockchip/armv8/packages

          # 设置环境变量
          echo "DATE=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
          echo "HASH=$(git log -1 --format="%H")" >> $GITHUB_ENV

      - name: 压缩编译产物
        run: |
          mkdir -p output
          cp -r build_dir output/
          cp -r staging_dir output/
          tar -czvf build_artifacts.tar.gz output

          # 检查压缩文件大小是否超过 2GB
          FILE_SIZE=$(stat -c%s "build_artifacts.tar.gz")
          MAX_SIZE=$((2 * 1024 * 1024 * 1024)) # 2GB in bytes

          if [ $FILE_SIZE -gt $MAX_SIZE ]; then
            echo "压缩后的文件大小为 $(($FILE_SIZE / (1024 * 1024))) MB，超过了 2GB，已删除该文件。"
            rm build_artifacts.tar.gz
          else
            echo "压缩后的文件大小为 $(($FILE_SIZE / (1024 * 1024))) MB，未超过 2GB。"
          fi

      - name: Delete tag
        run: gh release delete linux-6.12.y --cleanup-tag || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          commit: ${{ env.HASH }}
          name: Rockchip v6.12 Images ${{ env.DATE }}
          tag: linux-6.12.y
          replacesArtifacts: true
          prerelease: true
          token: "${{ secrets.GITHUB_TOKEN }}"
          artifacts: |
            bin/targets/rockchip/armv8/*
            build_artifacts.tar.gz
